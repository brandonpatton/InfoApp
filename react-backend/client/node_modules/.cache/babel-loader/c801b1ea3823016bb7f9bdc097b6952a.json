{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Btp12\\\\Documents\\\\INTERVIEW P2\\\\part1 (safekeeping)\\\\test\\\\react-backend\\\\client\\\\src\\\\App.js\";\nimport { Component, React } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'; //import './infoApp.css';\n\nimport { MDBCard, MDBCardBody, MDBContainer, MDBCardTitle, MDBCardText } from \"mdbreact\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'; //import data from './data';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InfoApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //initial state.  Will be updated w/button press\n      currentInfo: {\n        //Page element will check for id == 0, only display state elements if FALSE.  MAY CHANGE\n        //Plan on having a function which does the this.state.currentInfo.id != 0 check. \n        //  On TRUE, only displays a title = name attribute below\n        //  On FALSE, displays state elements.  This implies a button has been pressed\n        \"id\": 0,\n        \"application\": \"http://demo.opslinesys.net\",\n        \"alert\": \"\",\n        \"severity_level\": 0,\n        \"name\": \"Click a Button to Learn About Various Attack Techniques\",\n        \"description\": \"\",\n        \"solution\": \"\",\n        \"evidence\": \"\"\n      },\n      occurrences: 0\n    };\n  }\n\n  searchDB(searchTerm) {\n    let found;\n\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].name === searchTerm) {\n        found.push(data[i]);\n      }\n    }\n\n    console.log(found);\n    let occurrences = found.length;\n    this.setState({\n      occurrences: occurrences\n    });\n    this.setState({\n      currentInfo: found[0]\n    }); //grab list of json objects from db\n    //search list using .find (returns all occurences in a list)\n    //     can do a length() on this to get occurences\n  }\n\n  displayInfo() {\n    if (this.state.currentInfo.id == 0) {\n      //display \"Click a Button to Learn About Various Attack Techniques\" title\n      const result = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.currentInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 28\n      }, this);\n    } else if (this.state.currentInfo.evidence == \"\") {\n      const result = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-card-row\",\n        children: /*#__PURE__*/_jsxDEV(MDBCard, {\n          className: \"info-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoTitle\",\n            children: this.state.currentInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: [\"Severity Level: \", this.state.currentInfo.severity_level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: [\"Alert: \", this.state.currentInfo.alert]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: [\"Description: \", this.state.currentInfo.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: [\"Solution: \", this.state.currentInfo.solution]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: \"Evidence: No evidence included\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: [\"Application: \", this.state.currentInfo.application]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: [\"Occurrences: \", this.state.currentInfo.occurrences]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }, this);\n    } else {\n      //display state elements. If we reach this that means a button has been pressed (otherwise id == 0)\n      const result = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-card-row\",\n        children: /*#__PURE__*/_jsxDEV(MDBCard, {\n          className: \"info-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoTitle\",\n            children: this.state.currentInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: [\"Severity Level: \", this.state.currentInfo.severity_level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: [\"Alert: \", this.state.currentInfo.alert]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: [\"Description: \", this.state.currentInfo.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: [\"Solution: \", this.state.currentInfo.solution]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: [\"Evidence: \", this.state.currentInfo.evidence]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: [\"Application: \", this.state.currentInfo.application]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"infoCard\",\n            children: [\"Occurrences: \", this.state.currentInfo.occurrences]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }, this);\n    }\n\n    return result;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"InfoApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.searchDB(\"Path Traversal\"),\n            children: \"Path Traversal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.searchDB(\"Cross Site Scripting\"),\n            children: \"Cross Site Scripting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.searchDB(\"X-Frame-Options Header Not Set\"),\n            children: \"X-Frame-Options Header Not Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.searchDB(\"Server Leaks Information via \\\"X-Powered-By\\\" HTTP Response Header Field(s)\"),\n            children: \"Server Leaks Information via \\\\\\\"X-Powered-By\\\\\\\" HTTP Response Header Field(s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.searchDB(\"Cross-Domain JavaScript Source File Inclusion\"),\n            children: \"Cross-Domain JavaScript Source File Inclusion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.searchDB(\"Absence of Anti-CSRF Tokens\"),\n            children: \"Absence of Anti-CSRF Tokens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.searchDB(\"X-Content-Type-Options Header Missing\"),\n            children: \"X-Content-Type-Options Header Missing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: this.displayInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default InfoApp;","map":{"version":3,"sources":["C:/Users/Btp12/Documents/INTERVIEW P2/part1 (safekeeping)/test/react-backend/client/src/App.js"],"names":["Component","React","ReactDOM","BrowserRouter","Router","MDBCard","MDBCardBody","MDBContainer","MDBCardTitle","MDBCardText","Row","Col","Container","Form","Button","InfoApp","constructor","props","state","currentInfo","occurrences","searchDB","searchTerm","found","i","data","length","name","push","console","log","setState","displayInfo","id","result","evidence","severity_level","alert","description","solution","application","render"],"mappings":"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","sourcesContent":["import { Component, React } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n//import './infoApp.css';\nimport { MDBCard, MDBCardBody, MDBContainer,MDBCardTitle,MDBCardText } from \"mdbreact\";\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n//import data from './data';\n\n\nclass InfoApp extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            //initial state.  Will be updated w/button press\n            currentInfo: {\n                //Page element will check for id == 0, only display state elements if FALSE.  MAY CHANGE\n\n                //Plan on having a function which does the this.state.currentInfo.id != 0 check. \n                //  On TRUE, only displays a title = name attribute below\n                //  On FALSE, displays state elements.  This implies a button has been pressed\n                \"id\": 0,\n                \"application\": \"http://demo.opslinesys.net\",\n                \"alert\": \"\",\n                \"severity_level\": 0,\n                \"name\": \"Click a Button to Learn About Various Attack Techniques\",\n                \"description\": \"\",\n                \"solution\": \"\",\n                \"evidence\": \"\"\n            },\n            occurrences: 0\n        };\n\n    }\n\n    searchDB(searchTerm){\n        let found;\n        for (let i = 0; i < data.length; i++){\n            if (data[i].name === searchTerm){\n                found.push(data[i]);\n            }\n        }\n        console.log(found);\n        let occurrences = found.length;\n        this.setState({occurrences: occurrences});\n        this.setState({currentInfo: found[0]});\n        \n        //grab list of json objects from db\n        //search list using .find (returns all occurences in a list)\n        //     can do a length() on this to get occurences\n\n    }\n\n    displayInfo(){\n        if (this.state.currentInfo.id == 0){\n            //display \"Click a Button to Learn About Various Attack Techniques\" title\n            const result = <h1>{this.state.currentInfo.name}</h1>\n        } else if (this.state.currentInfo.evidence == \"\"){\n            const result = (<div className = \"info-card-row\">\n                <MDBCard className = \"info-card-body\">\n                    <p className=\"infoTitle\">{this.state.currentInfo.name}</p>\n                    <p className=\"infoCard\">Severity Level: {this.state.currentInfo.severity_level}</p>\n                    <p className=\"infoCard\">Alert: {this.state.currentInfo.alert}</p>\n                    <p className=\"infoCard\">Description: {this.state.currentInfo.description}</p>\n                    <p className=\"infoCard\">Solution: {this.state.currentInfo.solution}</p>\n                    <p className=\"infoCard\">Evidence: No evidence included</p>\n                    <p className=\"infoCard\">Application: {this.state.currentInfo.application}</p>\n                    <p className=\"infoCard\">Occurrences: {this.state.currentInfo.occurrences}</p>\n                </MDBCard>\n            </div>)\n        } else {\n            //display state elements. If we reach this that means a button has been pressed (otherwise id == 0)\n            const result = (<div className = \"info-card-row\">\n                <MDBCard className = \"info-card-body\">\n                    <p className=\"infoTitle\">{this.state.currentInfo.name}</p>\n                    <p className=\"infoCard\">Severity Level: {this.state.currentInfo.severity_level}</p>\n                    <p className=\"infoCard\">Alert: {this.state.currentInfo.alert}</p>\n                    <p className=\"infoCard\">Description: {this.state.currentInfo.description}</p>\n                    <p className=\"infoCard\">Solution: {this.state.currentInfo.solution}</p>\n                    <p className=\"infoCard\">Evidence: {this.state.currentInfo.evidence}</p>\n                    <p className=\"infoCard\">Application: {this.state.currentInfo.application}</p>\n                    <p className=\"infoCard\">Occurrences: {this.state.currentInfo.occurrences}</p>\n                </MDBCard>\n            </div>)\n        }\n        return result;\n    }\n    render(){\n        return(\n            <div>\n                <h1>InfoApp</h1>\n                <Row>\n                    <Col>\n                        <Button onClick = {this.searchDB(\"Path Traversal\")}>\n                            Path Traversal\n                        </Button>\n                        <Button onClick = {this.searchDB(\"Cross Site Scripting\")}>\n                            Cross Site Scripting\n                        </Button>\n                        <Button onClick = {this.searchDB(\"X-Frame-Options Header Not Set\")}>\n                            X-Frame-Options Header Not Set\n                        </Button>\n                        <Button onClick = {this.searchDB(\"Server Leaks Information via \\\"X-Powered-By\\\" HTTP Response Header Field(s)\")}>\n                            Server Leaks Information via \\\"X-Powered-By\\\" HTTP Response Header Field(s)\n                        </Button>\n                        <Button onClick = {this.searchDB(\"Cross-Domain JavaScript Source File Inclusion\")}>\n                            Cross-Domain JavaScript Source File Inclusion\n                        </Button>\n                        <Button onClick = {this.searchDB(\"Absence of Anti-CSRF Tokens\")}>\n                            Absence of Anti-CSRF Tokens\n                        </Button>\n                        <Button onClick = {this.searchDB(\"X-Content-Type-Options Header Missing\")}>\n                            X-Content-Type-Options Header Missing\n                        </Button>\n                    </Col>\n                    <Col>\n                        {this.displayInfo}\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default InfoApp;\n"]},"metadata":{},"sourceType":"module"}